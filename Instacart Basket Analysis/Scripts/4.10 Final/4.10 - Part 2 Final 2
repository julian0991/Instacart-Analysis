{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "45717260",
   "metadata": {},
   "source": [
    "# Analysis of key customer profile variables & visualizations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9c9dd3b2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "30fa6d41",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import os\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import scipy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4c707d1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_1 = pd.read_pickle(r'/Users/julianwere/Documents/01-2022/Instacart Basket Analysis/Data/Prepared Data/Part_5.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "cad330eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "path = r'/Users/julianwere/Documents/01-2022/Instacart Basket Analysis' "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "e7c772bd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 32404859 entries, 0 to 32404858\n",
      "Data columns (total 42 columns):\n",
      " #   Column                  Dtype         \n",
      "---  ------                  -----         \n",
      " 0   order_id                int64         \n",
      " 1   user_id                 category      \n",
      " 2   eval_set                object        \n",
      " 3   order_number            int64         \n",
      " 4   order_dow               int64         \n",
      " 5   order_hour_of_day       int64         \n",
      " 6   days_since_prior_order  float64       \n",
      " 7   product_id              int64         \n",
      " 8   add_to_cart_order       int64         \n",
      " 9   reordered               int64         \n",
      " 10  product_name            object        \n",
      " 11  aisle_id                int64         \n",
      " 12  department_id           int64         \n",
      " 13  prices                  float64       \n",
      " 14  _merge                  category      \n",
      " 15  price_range_loc         object        \n",
      " 16  busiest_day             object        \n",
      " 17  Busiest_day             object        \n",
      " 18  Busiest_period_of_day   object        \n",
      " 19  max_order               int64         \n",
      " 20  loyalty_flag            object        \n",
      " 21  average_amount_spent    float64       \n",
      " 22  loyalty_flag_2          object        \n",
      " 23  median_order_days       float64       \n",
      " 24  loyalty_flag_3          object        \n",
      " 25  First Name              object        \n",
      " 26  Surname                 object        \n",
      " 27  Gender                  object        \n",
      " 28  STATE                   object        \n",
      " 29  Age                     int64         \n",
      " 30  date_joined             datetime64[ns]\n",
      " 31  n_dependants            int64         \n",
      " 32  fam_status              object        \n",
      " 33  income                  int64         \n",
      " 34  check                   category      \n",
      " 35  region                  object        \n",
      " 36  exclusion_flag2         object        \n",
      " 37  age_groups              object        \n",
      " 38  income_tier             object        \n",
      " 39  parent_status           object        \n",
      " 40  parent_status_2         object        \n",
      " 41  price_range _loc        object        \n",
      "dtypes: category(3), datetime64[ns](1), float64(4), int64(13), object(21)\n",
      "memory usage: 9.8+ GB\n"
     ]
    }
   ],
   "source": [
    "df_1.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aba3261e",
   "metadata": {},
   "source": [
    "# 8. Compare your customer profiles with regions and departments. Can you identify a link between them? Customers may demonstrate different behaviors across regions, which could make this information important."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "07ca1ffc",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d6894699",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_1.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2d74a3d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Recap - Customer_profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "32e938d2",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age_groups</th>\n",
       "      <th>income</th>\n",
       "      <th>parent_status_2</th>\n",
       "      <th>order_dow</th>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>department_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Millennial</td>\n",
       "      <td>40423</td>\n",
       "      <td>Young_Parent</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Millennial</td>\n",
       "      <td>40423</td>\n",
       "      <td>Young_Parent</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Millennial</td>\n",
       "      <td>40423</td>\n",
       "      <td>Young_Parent</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Millennial</td>\n",
       "      <td>40423</td>\n",
       "      <td>Young_Parent</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Millennial</td>\n",
       "      <td>40423</td>\n",
       "      <td>Young_Parent</td>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404854</th>\n",
       "      <td>Millennial</td>\n",
       "      <td>53755</td>\n",
       "      <td>single_adult</td>\n",
       "      <td>4</td>\n",
       "      <td>23</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404855</th>\n",
       "      <td>Millennial</td>\n",
       "      <td>46151</td>\n",
       "      <td>Young_Parent</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404856</th>\n",
       "      <td>Millennial</td>\n",
       "      <td>46151</td>\n",
       "      <td>Young_Parent</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404857</th>\n",
       "      <td>Millennial</td>\n",
       "      <td>46151</td>\n",
       "      <td>Young_Parent</td>\n",
       "      <td>6</td>\n",
       "      <td>15</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404858</th>\n",
       "      <td>Millennial</td>\n",
       "      <td>46151</td>\n",
       "      <td>Young_Parent</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>32404859 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          age_groups  income parent_status_2  order_dow  order_hour_of_day  \\\n",
       "0         Millennial   40423    Young_Parent          2                  8   \n",
       "1         Millennial   40423    Young_Parent          3                  7   \n",
       "2         Millennial   40423    Young_Parent          3                 12   \n",
       "3         Millennial   40423    Young_Parent          4                  7   \n",
       "4         Millennial   40423    Young_Parent          4                 15   \n",
       "...              ...     ...             ...        ...                ...   \n",
       "32404854  Millennial   53755    single_adult          4                 23   \n",
       "32404855  Millennial   46151    Young_Parent          6                 11   \n",
       "32404856  Millennial   46151    Young_Parent          1                 11   \n",
       "32404857  Millennial   46151    Young_Parent          6                 15   \n",
       "32404858  Millennial   46151    Young_Parent          1                 12   \n",
       "\n",
       "          department_id  \n",
       "0                     7  \n",
       "1                     7  \n",
       "2                     7  \n",
       "3                     7  \n",
       "4                     7  \n",
       "...                 ...  \n",
       "32404854              7  \n",
       "32404855             12  \n",
       "32404856             12  \n",
       "32404857             12  \n",
       "32404858             12  \n",
       "\n",
       "[32404859 rows x 6 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_1[['age_groups','income','parent_status_2','order_dow','order_hour_of_day','department_id']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "61db72a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Updates_to_price_range_variable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "55d5697a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>loyalty_flag_3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Regular_customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Regular_customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Regular_customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Regular_customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Regular_customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404854</th>\n",
       "      <td>Frequent_customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404855</th>\n",
       "      <td>Regular_customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404856</th>\n",
       "      <td>Regular_customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404857</th>\n",
       "      <td>Regular_customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404858</th>\n",
       "      <td>Regular_customer</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>32404859 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             loyalty_flag_3\n",
       "0          Regular_customer\n",
       "1          Regular_customer\n",
       "2          Regular_customer\n",
       "3          Regular_customer\n",
       "4          Regular_customer\n",
       "...                     ...\n",
       "32404854  Frequent_customer\n",
       "32404855   Regular_customer\n",
       "32404856   Regular_customer\n",
       "32404857   Regular_customer\n",
       "32404858   Regular_customer\n",
       "\n",
       "[32404859 rows x 1 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_1[['loyalty_flag_3']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "0799f734",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_1.loc[df_1['prices'] > 15, 'price_range_loc'] = 'High-range product'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "f7d7da78",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_1.loc[(df_1['prices'] <= 15) & (df_1['prices'] > 5), 'price_range_loc'] = 'Mid-range product'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "65012fa3",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_1.loc[df_1['prices'] <= 5, 'price_range_loc'] = 'Low-range product'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "9eb8b182",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Mid-range product     21860860\n",
       "Low-range product     10126321\n",
       "High-range product      417678\n",
       "Name: price_range_loc, dtype: int64"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_1['price_range_loc'].value_counts(dropna = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "3e54d8c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fam_status</th>\n",
       "      <th>age_groups</th>\n",
       "      <th>loyalty_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>married</td>\n",
       "      <td>Millennial</td>\n",
       "      <td>New customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>married</td>\n",
       "      <td>Millennial</td>\n",
       "      <td>New customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>married</td>\n",
       "      <td>Millennial</td>\n",
       "      <td>New customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>married</td>\n",
       "      <td>Millennial</td>\n",
       "      <td>New customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>married</td>\n",
       "      <td>Millennial</td>\n",
       "      <td>New customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404854</th>\n",
       "      <td>single</td>\n",
       "      <td>Millennial</td>\n",
       "      <td>Regular customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404855</th>\n",
       "      <td>married</td>\n",
       "      <td>Millennial</td>\n",
       "      <td>New customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404856</th>\n",
       "      <td>married</td>\n",
       "      <td>Millennial</td>\n",
       "      <td>New customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404857</th>\n",
       "      <td>married</td>\n",
       "      <td>Millennial</td>\n",
       "      <td>New customer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404858</th>\n",
       "      <td>married</td>\n",
       "      <td>Millennial</td>\n",
       "      <td>New customer</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>32404859 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         fam_status  age_groups      loyalty_flag\n",
       "0           married  Millennial      New customer\n",
       "1           married  Millennial      New customer\n",
       "2           married  Millennial      New customer\n",
       "3           married  Millennial      New customer\n",
       "4           married  Millennial      New customer\n",
       "...             ...         ...               ...\n",
       "32404854     single  Millennial  Regular customer\n",
       "32404855    married  Millennial      New customer\n",
       "32404856    married  Millennial      New customer\n",
       "32404857    married  Millennial      New customer\n",
       "32404858    married  Millennial      New customer\n",
       "\n",
       "[32404859 rows x 3 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_1[['fam_status','age_groups','loyalty_flag']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ed870aea",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 13 fam_status_age_groups_loyalty flag comparison"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "39902a4e",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend_13 = df_1[['fam_status','age_groups','loyalty_flag']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6cb93299",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "fam_status                        age_groups  loyalty_flag    \n",
       "divorced/widowed                  Boomer      Loyal customer       402055\n",
       "                                              New customer         241669\n",
       "                                              Regular customer     618721\n",
       "                                  Silent      Loyal customer       480667\n",
       "                                              New customer         288653\n",
       "                                              Regular customer     740047\n",
       "living with parents and siblings  Millennial  Loyal customer       492749\n",
       "                                              New customer         291210\n",
       "                                              Regular customer     766644\n",
       "married                           Boomer      Loyal customer      2242562\n",
       "                                              New customer        1399886\n",
       "                                              Regular customer    3491877\n",
       "                                  Gen_X       Loyal customer      1961421\n",
       "                                              New customer        1162742\n",
       "                                              Regular customer    3007516\n",
       "                                  Millennial  Loyal customer      1550537\n",
       "                                              New customer         950759\n",
       "                                              Regular customer    2418829\n",
       "                                  Silent      Loyal customer      1447980\n",
       "                                              New customer         880306\n",
       "                                              Regular customer    2242338\n",
       "single                            Boomer      Loyal customer       400265\n",
       "                                              New customer         221672\n",
       "                                              Regular customer     543936\n",
       "                                  Gen_X       Loyal customer       633739\n",
       "                                              New customer         382062\n",
       "                                              Regular customer     987090\n",
       "                                  Millennial  Loyal customer       672118\n",
       "                                              New customer         425031\n",
       "                                              Regular customer    1059778\n",
       "dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_13.value_counts(dropna = False).sort_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "076ee591",
   "metadata": {},
   "outputs": [],
   "source": [
    "#1 Comparison: US Region by type_of_spending"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "15414dc9",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend1 = pd.crosstab(df_1['region'],df_1['loyalty_flag_2'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "54f822a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>loyalty_flag_2</th>\n",
       "      <th>High Spender</th>\n",
       "      <th>Low Spender</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>155975</td>\n",
       "      <td>7441350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>108225</td>\n",
       "      <td>5614511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>209691</td>\n",
       "      <td>10582194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>160354</td>\n",
       "      <td>8132559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "loyalty_flag_2  High Spender  Low Spender\n",
       "region                                   \n",
       "Midwest               155975      7441350\n",
       "Northeast             108225      5614511\n",
       "South                 209691     10582194\n",
       "West                  160354      8132559"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d6f52381",
   "metadata": {},
   "outputs": [],
   "source": [
    "#customer_loyalty"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "e5250d4e",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_1.loc[df_1['max_order'] > 40, 'loyalty_flagg'] = 'Loyal customer'\n",
    "df_1.loc[(df_1['max_order'] <= 40) & (df_1['max_order'] > 10), 'loyalty_flagg'] = 'Regular customer'\n",
    "df_1.loc[df_1['max_order'] <= 10, 'loyalty_flagg'] = 'New customer'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "ef688c19",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Regular customer    15876776\n",
       "Loyal customer      10284093\n",
       "New customer         6243990\n",
       "Name: loyalty_flagg, dtype: int64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_1['loyalty_flagg'].value_counts (dropna = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aba4a489",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ba911092",
   "metadata": {},
   "outputs": [],
   "source": [
    "#2 Comparison: region by price_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "6e406ffd",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend_2 = pd.crosstab(df_1['region'],df_1['price_range_loc'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "479f888f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>price_range_loc</th>\n",
       "      <th>High-range product</th>\n",
       "      <th>Low-range product</th>\n",
       "      <th>Mid-range product</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>97918</td>\n",
       "      <td>2372304</td>\n",
       "      <td>5127103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>73202</td>\n",
       "      <td>1792943</td>\n",
       "      <td>3856591</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>139390</td>\n",
       "      <td>3368338</td>\n",
       "      <td>7284157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>107168</td>\n",
       "      <td>2592736</td>\n",
       "      <td>5593009</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "price_range_loc  High-range product  Low-range product  Mid-range product\n",
       "region                                                                   \n",
       "Midwest                       97918            2372304            5127103\n",
       "Northeast                     73202            1792943            3856591\n",
       "South                        139390            3368338            7284157\n",
       "West                         107168            2592736            5593009"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_2\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eedd0f7f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aae2589d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#3 Comparison: income_tier by region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "22a0e860",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend_3 = pd.crosstab(df_1['income_tier'],df_1['region'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "a8c1d7dc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>region</th>\n",
       "      <th>Midwest</th>\n",
       "      <th>Northeast</th>\n",
       "      <th>South</th>\n",
       "      <th>West</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>income_tier</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>low_income</th>\n",
       "      <td>6574402</td>\n",
       "      <td>4967080</td>\n",
       "      <td>9358214</td>\n",
       "      <td>7177497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>middle_income</th>\n",
       "      <td>19482</td>\n",
       "      <td>10962</td>\n",
       "      <td>27813</td>\n",
       "      <td>17663</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>upper_income</th>\n",
       "      <td>12185</td>\n",
       "      <td>4885</td>\n",
       "      <td>6285</td>\n",
       "      <td>5973</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "region         Midwest  Northeast    South     West\n",
       "income_tier                                        \n",
       "low_income     6574402    4967080  9358214  7177497\n",
       "middle_income    19482      10962    27813    17663\n",
       "upper_income     12185       4885     6285     5973"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_3 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0dce1e9e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#4 Comparison: price_range by department_id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "605f0044",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend_4 = pd.crosstab(df_1['price_range_loc'],df_1['department_id']) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "cce25da7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>department_id</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>...</th>\n",
       "      <th>12</th>\n",
       "      <th>13</th>\n",
       "      <th>14</th>\n",
       "      <th>15</th>\n",
       "      <th>16</th>\n",
       "      <th>17</th>\n",
       "      <th>18</th>\n",
       "      <th>19</th>\n",
       "      <th>20</th>\n",
       "      <th>21</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range_loc</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>High-range product</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>412323</td>\n",
       "      <td>228</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5127</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Low-range product</th>\n",
       "      <td>681412</td>\n",
       "      <td>15972</td>\n",
       "      <td>287938</td>\n",
       "      <td>2697883</td>\n",
       "      <td>35243</td>\n",
       "      <td>76974</td>\n",
       "      <td>852974</td>\n",
       "      <td>29551</td>\n",
       "      <td>299327</td>\n",
       "      <td>1221</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>531864</td>\n",
       "      <td>219333</td>\n",
       "      <td>298683</td>\n",
       "      <td>1431016</td>\n",
       "      <td>258269</td>\n",
       "      <td>125317</td>\n",
       "      <td>1819106</td>\n",
       "      <td>313628</td>\n",
       "      <td>19746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mid-range product</th>\n",
       "      <td>1553331</td>\n",
       "      <td>20319</td>\n",
       "      <td>884490</td>\n",
       "      <td>6781408</td>\n",
       "      <td>118453</td>\n",
       "      <td>192279</td>\n",
       "      <td>1835149</td>\n",
       "      <td>68165</td>\n",
       "      <td>567300</td>\n",
       "      <td>33352</td>\n",
       "      <td>...</td>\n",
       "      <td>296604</td>\n",
       "      <td>1343277</td>\n",
       "      <td>483700</td>\n",
       "      <td>769375</td>\n",
       "      <td>3962604</td>\n",
       "      <td>480397</td>\n",
       "      <td>298485</td>\n",
       "      <td>1068444</td>\n",
       "      <td>737621</td>\n",
       "      <td>49399</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "department_id            1      2       3        4       5       6        7   \\\n",
       "price_range_loc                                                                \n",
       "High-range product        0      0       0        0       0       0        0   \n",
       "Low-range product    681412  15972  287938  2697883   35243   76974   852974   \n",
       "Mid-range product   1553331  20319  884490  6781408  118453  192279  1835149   \n",
       "\n",
       "department_id          8       9      10  ...      12       13      14  \\\n",
       "price_range_loc                           ...                            \n",
       "High-range product      0       0      0  ...  412323      228       0   \n",
       "Low-range product   29551  299327   1221  ...       0   531864  219333   \n",
       "Mid-range product   68165  567300  33352  ...  296604  1343277  483700   \n",
       "\n",
       "department_id           15       16      17      18       19      20     21  \n",
       "price_range_loc                                                              \n",
       "High-range product       0     5127       0       0        0       0      0  \n",
       "Low-range product   298683  1431016  258269  125317  1819106  313628  19746  \n",
       "Mid-range product   769375  3962604  480397  298485  1068444  737621  49399  \n",
       "\n",
       "[3 rows x 21 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f8c262ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "#5 Comparison: parent_status by price_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "a32db9d1",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend_5 = pd.crosstab(df_1['parent_status_2'],df_1['price_range_loc'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "ca2f0c4b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>price_range_loc</th>\n",
       "      <th>High-range product</th>\n",
       "      <th>Low-range product</th>\n",
       "      <th>Mid-range product</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parent_status_2</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Young_Parent</th>\n",
       "      <td>88892</td>\n",
       "      <td>2146642</td>\n",
       "      <td>4634663</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>single_adult</th>\n",
       "      <td>66410</td>\n",
       "      <td>1665387</td>\n",
       "      <td>3593894</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "price_range_loc  High-range product  Low-range product  Mid-range product\n",
       "parent_status_2                                                          \n",
       "Young_Parent                  88892            2146642            4634663\n",
       "single_adult                  66410            1665387            3593894"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b75bcfb0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#6 Comparison: parent_status by order_dow"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "58e583de",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend_6 = pd.crosstab(df_1['parent_status_2'],df_1['order_dow'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "8057cf9e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>order_dow</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parent_status_2</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Young_Parent</th>\n",
       "      <td>1323417</td>\n",
       "      <td>1203551</td>\n",
       "      <td>888464</td>\n",
       "      <td>809901</td>\n",
       "      <td>802957</td>\n",
       "      <td>894426</td>\n",
       "      <td>947481</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>single_adult</th>\n",
       "      <td>1021594</td>\n",
       "      <td>943694</td>\n",
       "      <td>689518</td>\n",
       "      <td>628691</td>\n",
       "      <td>624154</td>\n",
       "      <td>692930</td>\n",
       "      <td>725110</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "order_dow              0        1       2       3       4       5       6\n",
       "parent_status_2                                                          \n",
       "Young_Parent     1323417  1203551  888464  809901  802957  894426  947481\n",
       "single_adult     1021594   943694  689518  628691  624154  692930  725110"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "213cdad6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f2a83b03",
   "metadata": {},
   "outputs": [],
   "source": [
    "#7 Comparison: age_groups by department_id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "4406b940",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_age_group_7 = pd.crosstab(df_1['age_groups'],df_1['department_id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "bedfffd3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>department_id</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>...</th>\n",
       "      <th>12</th>\n",
       "      <th>13</th>\n",
       "      <th>14</th>\n",
       "      <th>15</th>\n",
       "      <th>16</th>\n",
       "      <th>17</th>\n",
       "      <th>18</th>\n",
       "      <th>19</th>\n",
       "      <th>20</th>\n",
       "      <th>21</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_groups</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Boomer</th>\n",
       "      <td>664588</td>\n",
       "      <td>10883</td>\n",
       "      <td>346224</td>\n",
       "      <td>2798786</td>\n",
       "      <td>44492</td>\n",
       "      <td>78674</td>\n",
       "      <td>797006</td>\n",
       "      <td>29332</td>\n",
       "      <td>257178</td>\n",
       "      <td>10026</td>\n",
       "      <td>...</td>\n",
       "      <td>210035</td>\n",
       "      <td>555700</td>\n",
       "      <td>205682</td>\n",
       "      <td>316723</td>\n",
       "      <td>1578241</td>\n",
       "      <td>217944</td>\n",
       "      <td>123241</td>\n",
       "      <td>852970</td>\n",
       "      <td>311514</td>\n",
       "      <td>20103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gen_X</th>\n",
       "      <td>558431</td>\n",
       "      <td>9004</td>\n",
       "      <td>293569</td>\n",
       "      <td>2384792</td>\n",
       "      <td>38756</td>\n",
       "      <td>67746</td>\n",
       "      <td>672118</td>\n",
       "      <td>24187</td>\n",
       "      <td>215516</td>\n",
       "      <td>8810</td>\n",
       "      <td>...</td>\n",
       "      <td>176976</td>\n",
       "      <td>469307</td>\n",
       "      <td>175974</td>\n",
       "      <td>266849</td>\n",
       "      <td>1360907</td>\n",
       "      <td>185845</td>\n",
       "      <td>111442</td>\n",
       "      <td>719770</td>\n",
       "      <td>264147</td>\n",
       "      <td>17271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Millennial</th>\n",
       "      <td>591812</td>\n",
       "      <td>9870</td>\n",
       "      <td>312752</td>\n",
       "      <td>2520232</td>\n",
       "      <td>42621</td>\n",
       "      <td>72639</td>\n",
       "      <td>708101</td>\n",
       "      <td>26378</td>\n",
       "      <td>231863</td>\n",
       "      <td>9302</td>\n",
       "      <td>...</td>\n",
       "      <td>188162</td>\n",
       "      <td>499233</td>\n",
       "      <td>189037</td>\n",
       "      <td>285891</td>\n",
       "      <td>1445304</td>\n",
       "      <td>194619</td>\n",
       "      <td>111092</td>\n",
       "      <td>772504</td>\n",
       "      <td>279021</td>\n",
       "      <td>18977</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Silent</th>\n",
       "      <td>419912</td>\n",
       "      <td>6534</td>\n",
       "      <td>219883</td>\n",
       "      <td>1775481</td>\n",
       "      <td>27827</td>\n",
       "      <td>50194</td>\n",
       "      <td>510898</td>\n",
       "      <td>17819</td>\n",
       "      <td>162070</td>\n",
       "      <td>6435</td>\n",
       "      <td>...</td>\n",
       "      <td>133754</td>\n",
       "      <td>351129</td>\n",
       "      <td>132340</td>\n",
       "      <td>198595</td>\n",
       "      <td>1014295</td>\n",
       "      <td>140258</td>\n",
       "      <td>78027</td>\n",
       "      <td>542306</td>\n",
       "      <td>196567</td>\n",
       "      <td>12794</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "department_id      1      2       3        4      5      6       7      8   \\\n",
       "age_groups                                                                   \n",
       "Boomer         664588  10883  346224  2798786  44492  78674  797006  29332   \n",
       "Gen_X          558431   9004  293569  2384792  38756  67746  672118  24187   \n",
       "Millennial     591812   9870  312752  2520232  42621  72639  708101  26378   \n",
       "Silent         419912   6534  219883  1775481  27827  50194  510898  17819   \n",
       "\n",
       "department_id      9      10  ...      12      13      14      15       16  \\\n",
       "age_groups                    ...                                            \n",
       "Boomer         257178  10026  ...  210035  555700  205682  316723  1578241   \n",
       "Gen_X          215516   8810  ...  176976  469307  175974  266849  1360907   \n",
       "Millennial     231863   9302  ...  188162  499233  189037  285891  1445304   \n",
       "Silent         162070   6435  ...  133754  351129  132340  198595  1014295   \n",
       "\n",
       "department_id      17      18      19      20     21  \n",
       "age_groups                                            \n",
       "Boomer         217944  123241  852970  311514  20103  \n",
       "Gen_X          185845  111442  719770  264147  17271  \n",
       "Millennial     194619  111092  772504  279021  18977  \n",
       "Silent         140258   78027  542306  196567  12794  \n",
       "\n",
       "[4 rows x 21 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_age_group_7"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4cb72c4a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#8 Comparison: age_groups by type_of_spending"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "0999ef87",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend_8 = pd.crosstab(df_1['age_groups'],df_1['loyalty_flag_2'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "5cc4a494",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>loyalty_flag_2</th>\n",
       "      <th>High Spender</th>\n",
       "      <th>Low Spender</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_groups</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Boomer</th>\n",
       "      <td>187875</td>\n",
       "      <td>9374768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gen_X</th>\n",
       "      <td>173883</td>\n",
       "      <td>7960687</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Millennial</th>\n",
       "      <td>157614</td>\n",
       "      <td>8470041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Silent</th>\n",
       "      <td>114873</td>\n",
       "      <td>5965118</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "loyalty_flag_2  High Spender  Low Spender\n",
       "age_groups                               \n",
       "Boomer                187875      9374768\n",
       "Gen_X                 173883      7960687\n",
       "Millennial            157614      8470041\n",
       "Silent                114873      5965118"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0981adf0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#9 Comparison: age_groups by type_of_customer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "e83c5eab",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend_9 = pd.crosstab(df_1['age_groups'],df_1['loyalty_flag_3'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "c1eaa8d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>loyalty_flag_3</th>\n",
       "      <th>Frequent_customer</th>\n",
       "      <th>Regular_customer</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_groups</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Boomer</th>\n",
       "      <td>6351414</td>\n",
       "      <td>3211224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gen_X</th>\n",
       "      <td>5425699</td>\n",
       "      <td>2708871</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Millennial</th>\n",
       "      <td>5726484</td>\n",
       "      <td>2901171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Silent</th>\n",
       "      <td>4056256</td>\n",
       "      <td>2023735</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "loyalty_flag_3  Frequent_customer  Regular_customer\n",
       "age_groups                                         \n",
       "Boomer                    6351414           3211224\n",
       "Gen_X                     5425699           2708871\n",
       "Millennial                5726484           2901171\n",
       "Silent                    4056256           2023735"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_9"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5790f6e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#9_1 Comparison: age_groups by type_of_customer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9e066b56",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend_9_1 = pd.crosstab(df_1['age_groups'],df_1['loyalty_flag'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "7ff81a4c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>loyalty_flag</th>\n",
       "      <th>Loyal customer</th>\n",
       "      <th>New customer</th>\n",
       "      <th>Regular customer</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_groups</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Boomer</th>\n",
       "      <td>3044882</td>\n",
       "      <td>1863227</td>\n",
       "      <td>4654534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gen_X</th>\n",
       "      <td>2595160</td>\n",
       "      <td>1544804</td>\n",
       "      <td>3994606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Millennial</th>\n",
       "      <td>2715404</td>\n",
       "      <td>1667000</td>\n",
       "      <td>4245251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Silent</th>\n",
       "      <td>1928647</td>\n",
       "      <td>1168959</td>\n",
       "      <td>2982385</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "loyalty_flag  Loyal customer  New customer  Regular customer\n",
       "age_groups                                                  \n",
       "Boomer               3044882       1863227           4654534\n",
       "Gen_X                2595160       1544804           3994606\n",
       "Millennial           2715404       1667000           4245251\n",
       "Silent               1928647       1168959           2982385"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_9_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6ba7c35c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#10 Comparison: age_groups by order_hour_of_day"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "9e809c28",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend_10 = pd.crosstab(df_1['age_groups'],df_1['order_hour_of_day'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "7f36b5f3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>14</th>\n",
       "      <th>15</th>\n",
       "      <th>16</th>\n",
       "      <th>17</th>\n",
       "      <th>18</th>\n",
       "      <th>19</th>\n",
       "      <th>20</th>\n",
       "      <th>21</th>\n",
       "      <th>22</th>\n",
       "      <th>23</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_groups</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Boomer</th>\n",
       "      <td>63470</td>\n",
       "      <td>33388</td>\n",
       "      <td>19164</td>\n",
       "      <td>14378</td>\n",
       "      <td>16535</td>\n",
       "      <td>26279</td>\n",
       "      <td>84544</td>\n",
       "      <td>267099</td>\n",
       "      <td>504783</td>\n",
       "      <td>719049</td>\n",
       "      <td>...</td>\n",
       "      <td>791579</td>\n",
       "      <td>791982</td>\n",
       "      <td>753709</td>\n",
       "      <td>619795</td>\n",
       "      <td>481434</td>\n",
       "      <td>370723</td>\n",
       "      <td>287558</td>\n",
       "      <td>235440</td>\n",
       "      <td>183917</td>\n",
       "      <td>119844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gen_X</th>\n",
       "      <td>55902</td>\n",
       "      <td>29727</td>\n",
       "      <td>17520</td>\n",
       "      <td>12488</td>\n",
       "      <td>12127</td>\n",
       "      <td>21349</td>\n",
       "      <td>70654</td>\n",
       "      <td>215215</td>\n",
       "      <td>433334</td>\n",
       "      <td>616049</td>\n",
       "      <td>...</td>\n",
       "      <td>675335</td>\n",
       "      <td>666057</td>\n",
       "      <td>631739</td>\n",
       "      <td>525772</td>\n",
       "      <td>416284</td>\n",
       "      <td>315513</td>\n",
       "      <td>244532</td>\n",
       "      <td>200979</td>\n",
       "      <td>160844</td>\n",
       "      <td>103314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Millennial</th>\n",
       "      <td>59869</td>\n",
       "      <td>31506</td>\n",
       "      <td>19344</td>\n",
       "      <td>14125</td>\n",
       "      <td>14650</td>\n",
       "      <td>23420</td>\n",
       "      <td>79913</td>\n",
       "      <td>237834</td>\n",
       "      <td>454428</td>\n",
       "      <td>654815</td>\n",
       "      <td>...</td>\n",
       "      <td>715394</td>\n",
       "      <td>713018</td>\n",
       "      <td>676461</td>\n",
       "      <td>550553</td>\n",
       "      <td>429137</td>\n",
       "      <td>334051</td>\n",
       "      <td>260481</td>\n",
       "      <td>208937</td>\n",
       "      <td>169177</td>\n",
       "      <td>104268</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Silent</th>\n",
       "      <td>39528</td>\n",
       "      <td>21079</td>\n",
       "      <td>13347</td>\n",
       "      <td>10290</td>\n",
       "      <td>9930</td>\n",
       "      <td>16913</td>\n",
       "      <td>55382</td>\n",
       "      <td>170906</td>\n",
       "      <td>325573</td>\n",
       "      <td>464290</td>\n",
       "      <td>...</td>\n",
       "      <td>506828</td>\n",
       "      <td>491087</td>\n",
       "      <td>473293</td>\n",
       "      <td>391534</td>\n",
       "      <td>309647</td>\n",
       "      <td>238018</td>\n",
       "      <td>183585</td>\n",
       "      <td>150281</td>\n",
       "      <td>120287</td>\n",
       "      <td>74890</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4 rows Ã— 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "order_hour_of_day     0      1      2      3      4      5      6       7   \\\n",
       "age_groups                                                                   \n",
       "Boomer             63470  33388  19164  14378  16535  26279  84544  267099   \n",
       "Gen_X              55902  29727  17520  12488  12127  21349  70654  215215   \n",
       "Millennial         59869  31506  19344  14125  14650  23420  79913  237834   \n",
       "Silent             39528  21079  13347  10290   9930  16913  55382  170906   \n",
       "\n",
       "order_hour_of_day      8       9   ...      14      15      16      17  \\\n",
       "age_groups                         ...                                   \n",
       "Boomer             504783  719049  ...  791579  791982  753709  619795   \n",
       "Gen_X              433334  616049  ...  675335  666057  631739  525772   \n",
       "Millennial         454428  654815  ...  715394  713018  676461  550553   \n",
       "Silent             325573  464290  ...  506828  491087  473293  391534   \n",
       "\n",
       "order_hour_of_day      18      19      20      21      22      23  \n",
       "age_groups                                                         \n",
       "Boomer             481434  370723  287558  235440  183917  119844  \n",
       "Gen_X              416284  315513  244532  200979  160844  103314  \n",
       "Millennial         429137  334051  260481  208937  169177  104268  \n",
       "Silent             309647  238018  183585  150281  120287   74890  \n",
       "\n",
       "[4 rows x 24 columns]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dab1044e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#11 Comparison: age_groups by Busiest_Period_of_day"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "a238d8d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend11 = pd.crosstab(df_1['age_groups'],df_1['Busiest_period_of_day'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "45787536",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Busiest_period_of_day</th>\n",
       "      <th>Average_orders</th>\n",
       "      <th>Fewest_orders</th>\n",
       "      <th>Most_orders</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_groups</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Boomer</th>\n",
       "      <td>1316232</td>\n",
       "      <td>82634</td>\n",
       "      <td>8163777</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gen_X</th>\n",
       "      <td>1126326</td>\n",
       "      <td>73422</td>\n",
       "      <td>6934822</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Millennial</th>\n",
       "      <td>1193401</td>\n",
       "      <td>79213</td>\n",
       "      <td>7355041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Silent</th>\n",
       "      <td>843919</td>\n",
       "      <td>52875</td>\n",
       "      <td>5183197</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Busiest_period_of_day  Average_orders  Fewest_orders  Most_orders\n",
       "age_groups                                                       \n",
       "Boomer                        1316232          82634      8163777\n",
       "Gen_X                         1126326          73422      6934822\n",
       "Millennial                    1193401          79213      7355041\n",
       "Silent                         843919          52875      5183197"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend11"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5c9d055f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#11_1 Comparison: age_groups by loyalty flag_2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "65dc4eaa",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend11_1 = pd.crosstab(df_1['age_groups'],df_1['loyalty_flag_2'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "7d76f2a1",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>loyalty_flag_2</th>\n",
       "      <th>High Spender</th>\n",
       "      <th>Low Spender</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_groups</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Boomer</th>\n",
       "      <td>187875</td>\n",
       "      <td>9374768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gen_X</th>\n",
       "      <td>173883</td>\n",
       "      <td>7960687</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Millennial</th>\n",
       "      <td>157614</td>\n",
       "      <td>8470041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Silent</th>\n",
       "      <td>114873</td>\n",
       "      <td>5965118</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "loyalty_flag_2  High Spender  Low Spender\n",
       "age_groups                               \n",
       "Boomer                187875      9374768\n",
       "Gen_X                 173883      7960687\n",
       "Millennial            157614      8470041\n",
       "Silent                114873      5965118"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend11_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d7435ef8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "63f3a645",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatter plot for loyalty flag 2 and order freq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "0bf9e41f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'order_frequency')"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data = crosstab_spend20)\n",
    "plt.title('Expenditure on customer_orders')\n",
    "plt.xlabel('Age_groups')\n",
    "plt.ylabel('order_frequency')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c74939cf",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "be5251f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#12 Comparison: Time of day by expenditure"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "8adc6330",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend12 = pd.crosstab(df_1['order_hour_of_day'],df_1['price_range_loc'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "3893382c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>price_range_loc</th>\n",
       "      <th>High-range product</th>\n",
       "      <th>Low-range product</th>\n",
       "      <th>Mid-range product</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2779</td>\n",
       "      <td>68160</td>\n",
       "      <td>147830</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1416</td>\n",
       "      <td>35953</td>\n",
       "      <td>78331</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>925</td>\n",
       "      <td>21785</td>\n",
       "      <td>46665</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>647</td>\n",
       "      <td>15795</td>\n",
       "      <td>34839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>696</td>\n",
       "      <td>16507</td>\n",
       "      <td>36039</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1067</td>\n",
       "      <td>27214</td>\n",
       "      <td>59680</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3740</td>\n",
       "      <td>89902</td>\n",
       "      <td>196851</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>11595</td>\n",
       "      <td>275920</td>\n",
       "      <td>603539</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>21947</td>\n",
       "      <td>536748</td>\n",
       "      <td>1159423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>29696</td>\n",
       "      <td>775279</td>\n",
       "      <td>1649228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>33801</td>\n",
       "      <td>873664</td>\n",
       "      <td>1854295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>35439</td>\n",
       "      <td>860467</td>\n",
       "      <td>1840234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>34573</td>\n",
       "      <td>819742</td>\n",
       "      <td>1764217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>35049</td>\n",
       "      <td>830490</td>\n",
       "      <td>1795415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>35436</td>\n",
       "      <td>837566</td>\n",
       "      <td>1816134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>35474</td>\n",
       "      <td>828700</td>\n",
       "      <td>1797970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>33566</td>\n",
       "      <td>789191</td>\n",
       "      <td>1712445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>27016</td>\n",
       "      <td>650258</td>\n",
       "      <td>1410380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>21266</td>\n",
       "      <td>509103</td>\n",
       "      <td>1106133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>15703</td>\n",
       "      <td>392448</td>\n",
       "      <td>850154</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>12401</td>\n",
       "      <td>303498</td>\n",
       "      <td>660257</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>10286</td>\n",
       "      <td>246963</td>\n",
       "      <td>538388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>8037</td>\n",
       "      <td>196106</td>\n",
       "      <td>430082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>5123</td>\n",
       "      <td>124862</td>\n",
       "      <td>272331</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "price_range_loc    High-range product  Low-range product  Mid-range product\n",
       "order_hour_of_day                                                          \n",
       "0                                2779              68160             147830\n",
       "1                                1416              35953              78331\n",
       "2                                 925              21785              46665\n",
       "3                                 647              15795              34839\n",
       "4                                 696              16507              36039\n",
       "5                                1067              27214              59680\n",
       "6                                3740              89902             196851\n",
       "7                               11595             275920             603539\n",
       "8                               21947             536748            1159423\n",
       "9                               29696             775279            1649228\n",
       "10                              33801             873664            1854295\n",
       "11                              35439             860467            1840234\n",
       "12                              34573             819742            1764217\n",
       "13                              35049             830490            1795415\n",
       "14                              35436             837566            1816134\n",
       "15                              35474             828700            1797970\n",
       "16                              33566             789191            1712445\n",
       "17                              27016             650258            1410380\n",
       "18                              21266             509103            1106133\n",
       "19                              15703             392448             850154\n",
       "20                              12401             303498             660257\n",
       "21                              10286             246963             538388\n",
       "22                               8037             196106             430082\n",
       "23                               5123             124862             272331"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend12"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cac3af3f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3477678c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#13 Comparison: region by loyalty flag"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "41f50e58",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend_13 = pd.crosstab(df_1['region'],df_1['loyalty_flag'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "f829cf32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>loyalty_flag</th>\n",
       "      <th>Loyal customer</th>\n",
       "      <th>New customer</th>\n",
       "      <th>Regular customer</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>2373774</td>\n",
       "      <td>1472573</td>\n",
       "      <td>3750978</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>1841785</td>\n",
       "      <td>1100207</td>\n",
       "      <td>2780744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>3405844</td>\n",
       "      <td>2074410</td>\n",
       "      <td>5311631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>2662690</td>\n",
       "      <td>1596800</td>\n",
       "      <td>4033423</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "loyalty_flag  Loyal customer  New customer  Regular customer\n",
       "region                                                      \n",
       "Midwest              2373774       1472573           3750978\n",
       "Northeast            1841785       1100207           2780744\n",
       "South                3405844       2074410           5311631\n",
       "West                 2662690       1596800           4033423"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_13"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eaee45af",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "877a008f",
   "metadata": {},
   "source": [
    "# Visualizations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a24251f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#1 Comparison: US Region by expenditure"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "fe189083",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Region by customer expenditure'}, xlabel='region', ylabel='customer_expenditure'>"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "crosstab_spend1.plot.bar(color = ['Blue','Violet'], title = 'Region by customer expenditure', xlabel = 'region', ylabel = 'customer_expenditure', stacked = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "f0573712",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "bar_1 = crosstab_spend1.plot.bar(color = ['Blue','Violet'], title = 'Region by customer expenditure', xlabel = 'region', ylabel = 'customer_expenditure', stacked = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fe380dfa",
   "metadata": {},
   "outputs": [],
   "source": [
    "bar_1.figure.savefig(os.path.join(path, '04 Analysis','Visualizations'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0c5e2a7a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#9 Comparison: age_groups by type_of_customer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "15036c76",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Age Group by type of customer'}, xlabel='age_group', ylabel='customer'>"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "crosstab_spend_9.plot.bar(color = ['Green','Orange'], title = 'Age Group by type of customer', xlabel = 'age_group', ylabel = 'customer', stacked = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "4c08d73e",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "bar_2 = crosstab_spend_9.plot.bar(color = ['Green','Orange'], title = 'Age Group by type of customer', xlabel = 'age_group', ylabel = 'customer', stacked = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d161b958",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Age group by region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "5a9d49c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "crosstab_spend_15 = pd.crosstab(df_1['region'],df_1['age_groups'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "06e16bab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>age_groups</th>\n",
       "      <th>Boomer</th>\n",
       "      <th>Gen_X</th>\n",
       "      <th>Millennial</th>\n",
       "      <th>Silent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>2245606</td>\n",
       "      <td>1940979</td>\n",
       "      <td>2002572</td>\n",
       "      <td>1408168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>1694982</td>\n",
       "      <td>1403642</td>\n",
       "      <td>1535542</td>\n",
       "      <td>1088570</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>3154130</td>\n",
       "      <td>2718259</td>\n",
       "      <td>2898325</td>\n",
       "      <td>2021171</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>2467925</td>\n",
       "      <td>2071690</td>\n",
       "      <td>2191216</td>\n",
       "      <td>1562082</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "age_groups   Boomer    Gen_X  Millennial   Silent\n",
       "region                                           \n",
       "Midwest     2245606  1940979     2002572  1408168\n",
       "Northeast   1694982  1403642     1535542  1088570\n",
       "South       3154130  2718259     2898325  2021171\n",
       "West        2467925  2071690     2191216  1562082"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_15"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "06c04f83",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Age Grougs by region'}, xlabel='age_group', ylabel='region'>"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "crosstab_spend010.plot.bar(color = ['Grey','Purple','orange','black'], title = 'Age Grougs by region', xlabel = 'age_group', ylabel = 'region', stacked = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f5d98254",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0429c717",
   "metadata": {},
   "outputs": [],
   "source": [
    "bar_2.figure.savefig(os.path.join(path, '04 Analysis','Visualizations'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "04201c54",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Age group by customer expenditure'}, ylabel='expenditure'>"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "crosstab_spend_8.plot.barh(color = ['pink', 'brown'], title = 'Age group by customer expenditure', xlabel = 'expenditure', ylabel = 'age_groups')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "c1e0fbda",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "bar_3 = crosstab_spend_8.plot.barh(color = ['pink', 'brown'], title = 'Age group by customer expenditure', xlabel = 'expenditure', ylabel = 'age_groups')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "12f384a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "bar_3.figure.savefig(os.path.join(path, '04 Analysis','Visualizations'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "07066ef7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Pie Chart Visuaization for price_range\n",
    "data = ['21860860','10126321','417678']\n",
    "labels = ['Low-range product(<=$5)','Mid-range product(>$5 and <=$15)','High_range product(>$15)']\n",
    "\n",
    "colors = sns.color_palette('pastel')[0:5]\n",
    "\n",
    "plt.pie(data, labels = labels, colors = colors, autopct='%.2f')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "ca712fe3",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "No handles with labels found to put in legend.\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pie_1 = data = ['21860860','10126321','417678']\n",
    "labels = ['Mid-range product(>=$5 and $15)','low-range product($5 and $15)','High_range product(>$15)']\n",
    "\n",
    "colors = sns.color_palette('pastel')[0:5]\n",
    "plt.legend(title = 'Range_of_products ')\n",
    "plt.pie(data, labels = labels, colors = colors, autopct='%.2f')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "0d45bda2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'customer_behaviour_region'}, xlabel='region', ylabel='frequency'>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "crosstab_spend_09.plot.bar(color = ['Blue','Violet','orange'], title = 'customer_behaviour_region', xlabel = 'region', ylabel = 'frequency', stacked = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e04ef801",
   "metadata": {},
   "outputs": [],
   "source": [
    "barh = df_1['department_id'].plot.barh(color = ['Brown'], title = 'Daily recorded orders', x = 'hour of day') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "31ede7fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "bar = df_1['department_id'].plot.barh(color = ['Brown'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "253d9eeb",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dd5069f6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#customer_loyalty "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "ab63ba25",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "customer_loyalty = df_1['loyalty_flag'].value_counts().plot.barh(color = ['Brown','Green','Orange'], title = 'customer_brand_loyalty', x = 'type_of_customer', y = 'frequency')\n",
    "plt.tight_layout()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "135304ae",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "08f60ce1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "hist2 = df_1['order_hour_of_day'].plot.hist(bins = 23, color = ['pink'], title = 'Daily recorded orders', x = 'hour of day') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "83444b0a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "60cb58be",
   "metadata": {},
   "outputs": [],
   "source": [
    "# customer orders and price range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "9bd70c2f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'distribution of customer orders'}>"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_1['loyalty_flag'].value_counts().plot.barh(title = 'distribution of customer orders', x = 'price_range_loc', y = 'price_range_loc')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "75ec3e20",
   "metadata": {},
   "outputs": [],
   "source": [
    "#customer by region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "481d3e17",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "customer_region = df_1['region'].value_counts().sort_index().plot.bar(color = 'purple',title = 'customer by region')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a20326a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#age_group by loyalty flag"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "7d994973",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>loyalty_flag</th>\n",
       "      <th>Loyal customer</th>\n",
       "      <th>New customer</th>\n",
       "      <th>Regular customer</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_groups</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Boomer</th>\n",
       "      <td>3044882</td>\n",
       "      <td>1863227</td>\n",
       "      <td>4654534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gen_X</th>\n",
       "      <td>2595160</td>\n",
       "      <td>1544804</td>\n",
       "      <td>3994606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Millennial</th>\n",
       "      <td>2715404</td>\n",
       "      <td>1667000</td>\n",
       "      <td>4245251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Silent</th>\n",
       "      <td>1928647</td>\n",
       "      <td>1168959</td>\n",
       "      <td>2982385</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "loyalty_flag  Loyal customer  New customer  Regular customer\n",
       "age_groups                                                  \n",
       "Boomer               3044882       1863227           4654534\n",
       "Gen_X                2595160       1544804           3994606\n",
       "Millennial           2715404       1667000           4245251\n",
       "Silent               1928647       1168959           2982385"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab_spend_9_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "4cac23ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Age group by order_frequency'}, ylabel='order_frequency'>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "crosstab_spend_9_1.plot.barh(color = ['pink', 'brown','blue'], title = 'Age group by order_frequency', xlabel = 'order_frequency', ylabel = 'age_groups')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5d57ef4b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#expenditure by time of day"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "74143106",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Expenditure_by_time_of_day'}, xlabel='order_hour_of_day', ylabel='frequency'>"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "crosstab_spend12.plot.bar(color = ['Green','Blue','Orange'], title = 'Expenditure_by_time_of_day', xlabel = 'order_hour_of_day', ylabel = 'frequency', stacked = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "407b7320",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Bar chart to represent Department Id."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "84debb32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Frequency of orders by department'}, xlabel='Dep_ID', ylabel='frequency_of_orders'>"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_1['department_id'].value_counts().plot.bar(color = ['grey'], xlabel = 'Dep_ID', ylabel = 'frequency_of_orders', title = 'Frequency of orders by department')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "20dd1f3c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2688325b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_1.to_pickle(os.path.join(path, 'Data','Prepared Data','Part_5.pkl'))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
